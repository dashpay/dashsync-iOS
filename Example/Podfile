target 'DashSync_Example' do
  platform :ios, '12.0'
  
  pod 'DashSync', :path => '../'
  pod 'KVO-MVVM', '0.5.1'
  pod 'SDWebImage', '5.9.2'
  pod 'CocoaImageHashing', :git => 'https://github.com/ameingast/cocoaimagehashing.git', :commit => 'ad01eee'
  
  target 'DashSync_Tests' do
    inherit! :search_paths
  end
end

target 'NetworkInfo' do
  platform :osx, '10.15'
  
  pod 'DashSync', :path => '../'
  pod 'DAPI-GRPC', :path => '../'
  pod 'SDWebImage', '5.9.2'
  pod 'CocoaImageHashing', :git => 'https://github.com/ameingast/cocoaimagehashing.git', :commit => 'ad01eee'
end

post_install do |installer|
    installer.pods_project.targets.each do |target|
        # fixes warnings about unsupported Deployment Target in Xcode 10
        if ["BoringSSL-GRPC", "abseil", "gRPC", "gRPC-Core", "gRPC-RxLibrary", "gRPC-ProtoRPC", "Protobuf", "DSJSONSchemaValidation", "!ProtoCompiler", "!ProtoCompiler-gRPCPlugin", "gRPC-gRPCCertificates", "UIViewController-KeyboardAdditions", "MMSegmentSlider", "MBProgressHUD", "KVO-MVVM", "CocoaLumberjack", "SDWebImage"].include? target.name
            target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
            end
        end
        
        # Hide warnings for specific pods
        if ["gRPC"].include? target.name
            target.build_configurations.each do |config|
                config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
            end
        end
        
        # temporary solution to work with gRPC-Core
        # see https://github.com/CocoaPods/CocoaPods/issues/8474
        if target.name == 'secp256k1_dash'
          target.build_configurations.each do |config|
              config.build_settings['HEADER_SEARCH_PATHS'] = '"${PODS_ROOT}/Headers/Private" "${PODS_ROOT}/Headers/Private/secp256k1_dash" "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/secp256k1_dash"'
          end
        end
    end

    # Apple Silicon fix when targeting Simulator
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end

    # Workaround: Patch relic to compile on macOS
    %x(patch -N Pods/bls-signatures-pod/contrib/relic/include/relic_err.h < relic_err.patch)
end
