name: Code coverage

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Code coverage
    runs-on: macOS-latest
    steps:
      - name: Install automake
        run: |
          brew install automake
      - name: Checkout DashSync
        uses: actions/checkout@v3
        with:
          path: dashsync
          submodules: recursive
      - name: Create LFS file list
        run: |
          git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        working-directory: ./dashsync
      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: dashsync/.git/lfs
          key: lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull
        working-directory: ./dashsync
      - uses: actions/cache@v3
        with:
          path: ./dashsync/Example/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Rustup add targets
        run: rustup target add aarch64-apple-ios x86_64-apple-ios aarch64-apple-ios-sim
      - name: Dependencies
        working-directory: ./dashsync/Example
        run: pod install --repo-update
      - name: Build
        working-directory: ./dashsync/Example
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          xcodebuild build-for-testing -scheme "DashSync-Example" -workspace "DashSync.xcworkspace" -destination "platform=$platform,name=iPhone 13"
      - name: Tests with Code Coverage
        working-directory: ./dashsync/Example
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          xcodebuild test-without-building -scheme "DashSync-Example" -workspace "DashSync.xcworkspace"  -destination "platform=$platform,name=iPhone 13" -testPlan FullUnitTestPlan
          bash <(curl -s https://codecov.io/bash)
